---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: longhorn
      namespace: storage
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/rkoosaar/plex
              tag: 1.41.5.9522-a96edc606@sha256:d7bd92c7d0e846107fdfdf582566789e11039bc0c4f44b5a63382e31179c19ef
            env:
              TZ: Europe/London
              PLEX_ADVERTISE_URL: https://plex.${SECRET_DOMAIN}:443,http://10.45.0.5:32400
              PLEX_NO_AUTH_NETWORKS: 10.0.0.0/16,10.1.0.0/16
              ALLOWED_NETWORKS: 10.0.0.0/8
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                memory: 10Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1003
        fsGroup: 1003
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 100, 1000]
        seccompProfile: { type: RuntimeDefault }
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 10.45.0.5
        ports:
          http:
            port: 32400
    ingress:
      app:
        className: external
        annotations:
          # external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          # gethomepage.dev/enabled: "true"
          # gethomepage.dev/group: Video
          # gethomepage.dev/name: Plex
          # gethomepage.dev/icon: plex.png
          # gethomepage.dev/description: Media Player
          # gethomepage.dev/widget.type: plex
          # gethomepage.dev/widget.url: http://plex.media:32400
          # gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PLEX_TOKEN}}` }}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/server-snippet: |
            location ~ ^/library/streams {
              proxy_set_header        Range "";
              proxy_pass              http://plex.default.svc.cluster.local:32400;
              proxy_http_version      1.1;
            }
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
      # TODO: If setting up Plex for the first time, you'll want to add the globalMounts section
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server
          #- path: /config
      # Separate PVC for cache to avoid backing up cache files
      cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      data:
        type: nfs
        server: nas.kvshs.xyz
        path: /data
        globalMounts:
          - path: /data
            readOnly: true
