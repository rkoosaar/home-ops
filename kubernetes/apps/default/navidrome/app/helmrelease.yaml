---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kavita
spec:
  chartRef:
    kind: OCIRepository
    name: navidrome
  interval: 1h
  values:
    controllers:
      navidrome:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 100
            runAsNonRoot: true
            fsGroup: 100
            fsGroupChangePolicy: OnRootMismatch
        containers:
          app:
            image:
              repository: ghcr.io/navidrome/navidrome
              tag: 0.58.0@sha256:2ae037d464de9f802d047165a13b1c9dc2bdbb14920a317ae4aef1233adc0a3c
            env:
              TZ: Europe/London
              ND_AUTHREQUESTLIMIT: 0
              ND_DATAFOLDER: /config
              ND_ENABLEGRAVATAR: true
              ND_ENABLESHARING: true
              ND_LOGLEVEL: info
              ND_MUSICFOLDER: /data/media/music
              ND_PORT: &port 8080
              ND_PROMETHEUS_ENABLED: true
              ND_REVERSEPROXYUSERHEADER: Remote-User
              ND_REVERSEPROXYWHITELIST: 10.0.0.0/8
              #ND_SCANSCHEDULE: "@every 1h"
            # envFrom:
            #   - secretRef:
            #       name: navidrome-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              # startup:
              #   enabled: false
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 300Mi
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: envoy-external
            namespace: network
            sectionName: https
    persistence:
      config:
        existingClaim: navidrome
      data:
        type: nfs
        server: unraid.kvshs.xyz
        path: /mnt/user/data
        globalMounts:
          - path: /data
            readOnly: true
