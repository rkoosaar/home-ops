---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app calibre
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      calibre:
        containers:
          app:
            image:
              repository: ghcr.io/linuxserver/calibre
              tag: 8.4.0@sha256:f17b542ed5116513d6be65667f4e35826b99738d4f1ebccba6c85e81c011c2f7
            env:
              TZ: Europe/London
              TITLE: Calibre
              PUID: 1001
              PGID: 1003
              # PUID: "1026"
              # PGID: "1000"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            # securityContext:
            #   allowPrivilegeEscalation: false
              # readOnlyRootFilesystem: true
              # capabilities: { drop: ["ALL"] }
              # add: ["seccomp:unconfined"]
            resources:
              requests:
                cpu: 15m
                memory: 324M
              limits:
                memory: 604M
    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 1001
    #     runAsGroup: 1003
    #     fsGroup: 1003
    #     fsGroupChangePolicy: OnRootMismatch
    #     supplementalGroups: [100]
    #     seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: calibre
        ports:
          http:
            port: 8080
          web:
            port: 8081
    ingress:
      app:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
      # web:
      #   className: internal
      #   annotations:
      #     external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
      #   hosts:
      #     - host: "read.${SECRET_DOMAIN}"
      #       paths:
      #         - path: /
      #           pathType: Prefix
      #           service:
      #             identifier: app
      #             port: web
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      data:
        type: nfs
        server: nas.kvshs.xyz
        path: /data
        globalMounts:
          - path: /data
