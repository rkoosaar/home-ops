---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich-microservices
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: dragonfly-operator
      namespace: database
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 105]
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: 'true'
    controllers:
      immich-microservices:
        type: statefulset
        annotations:
          configmap.reloader.stakater.com/reload: &configMap immich-configmap
          secret.reloader.stakater.com/reload: &secret immich-secret
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v2.1.0@sha256:72a9b9de6c6abfa7a9c9cdc244ae4d2bd9fea2ae00997f194cbd10aca72ea210
            envFrom:
              - configMapRef:
                  name: *configMap
              - secretRef:
                  name: *secret
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 1000Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 6000Mi
    service:
      main:
        controller: *app
        enabled: false
    persistence:
      library:
        enabled: true
        type: nfs
        server: nas.kvshs.xyz
        path: /media/photos/test
        globalMounts:
          - path: /usr/src/app/upload
      geocoding-dump:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.reverse-geocoding-dump
      geoname-dump:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/node_modules/local-reverse-geocoder/geonames_dump
      transformers-cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.transformers_cache
